name: SonarCloud Analysis

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  workflow_dispatch:  # Allow manual triggers

jobs:
  sonarcloud:
    name: SonarCloud Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi

      - name: Run tests with coverage
        run: |
          # Check if tests exist before running
          if find tests/ -name "test_*.py" -type f 2>/dev/null | grep -q .; then
            pytest tests/ \
              --cov=services \
              --cov-report=xml \
              --cov-report=term \
              -v || true  # Don't fail if tests don't pass yet
          else
            echo "No tests found, skipping coverage"
            # Create empty coverage file for SonarCloud
            echo '<?xml version="1.0" ?><coverage version="1.0"></coverage>' > coverage.xml
          fi

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=adamkwhite
            -Dsonar.projectKey=adamkwhite_transplant-gcp

      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true  # Don't fail build on quality gate failure initially
